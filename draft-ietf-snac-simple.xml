<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<rfc category="bcp" submissionType="IETF" docName="draft-ietf-snac-simple-04" ipr="trust200902"
     xmlns:xi="http://www.w3.org/2001/XInclude" version="3"
     scripts="Common,Latin" sortRefs="false" consensus="true"
     symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <front>
    <title abbrev='Automatic Stub Networks'>Automatically Connecting Stub Networks to Unmanaged Infrastructure</title>
    <author initials="T" surname="Lemon" fullname="Ted Lemon">
      <organization>Apple Inc.</organization>
      <address>
	<postal>
          <street>One Apple Park Way</street>
          <city>Cupertino</city>
          <region>California</region>
          <code>95014</code>
          <country>USA</country>
        </postal>
        <email>mellon@fugue.com</email>
      </address>
    </author>

    <author initials="J" surname="Hui" fullname="Jonathan Hui">
      <organization>Google LLC</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <region>California</region>
          <code>940432</code>
          <country>US</country>
        </postal>
        <email>jonhui@google.com</email>
      </address>
    </author>

    <date year='2024' month='June' day='21'/>
    <area>Internet</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <abstract>
      <t>
	This document describes a set of practices for connecting stub networks to adjacent infrastructure networks. This is
	applicable in cases such as constrained (Internet of Things) networks where there is a need to provide functional parity of
	service discovery and reachability between devices on the stub network and devices on an adjacent infrastructure link (for
	example, a home network).</t>
    </abstract>
  </front>

  <middle>
    <section>
      <name>Introduction</name>
      <t>
	This document describes a set of practices for connecting stub networks to adjacent infrastructure networks.
	There are several use cases for stub networks. Motivating factors include:
      </t>
      <ul>
	<li>
	  Incompatible speed: for example, an 802.15.4 network could not be easily bridged to a WiFi network because the data rates
	  are so dissimilar. So either it must be bridged in a very complicated and careful way to avoid overwhelming the 802.15.4
	  network with irrelevant traffic, or the 802.15.4 network needs to be a separate subnet.</li>
	<li>
	  Incompatible media: for example, a constrained 802.15.4 network connected as a stub network to a WiFi or ethernet
	  infrastructure network.  In the case of an 802.15.4 network, it is quite possible that the devices used to link the
	  infrastructure network to the stub network will not be conceived of by the end user as routers.  Consequently, we cannot
	  assume that these devices will be on all the time. A solution for this use case will require some sort of commissioning
	  process for stub routers, and can't assume that any particular stub router will always be available; rather, any stub
	  router that is available must be able to adapt to current conditions to provide reachability.</li>
	<li>
	  Incompatible mechanisms: the medium of the stub network may not, for example, use neighbor discovery to populate a
	  neighbor table. If the infrastructure network (as is typical) does use neighbor discovery, then bridging the two networks
	  together would require some way of translating between neighbor discovery and whatever mechanism is used on the stub
	  network, and hence complicates rather than simplifying the problem of connecting the two networks.</li>
	<li>
	  Incompatible framing: if the stub network is a 6lowpan <xref target="RFC4944"/> network, packets on the stub network are
	  expected to use 6lowpan header compression <xref target="RFC6282"/>. Making this work through a bridge would be very
	  difficult.</li>
	<li>
	  Convenience: end users often connect devices to each other in order to extend networks</li>
	<li>
	  Transitory connectivity: a mobile device acting as a router for a set of co-located devices could connect to a network
	  and gain access to services for itself and for the co-located devices.  Such a stub network is unlikely to have more
	  than one stub router.</li>
      </ul>
      <t>
	What makes stub networks a distinct type of network is simply that a stub network never provides transit between networks to
	which it is connected. The term "stub" refers to the way the network is seen by the link to which it is connected: there is
	reachability through a stub network router to devices on the stub network from the infrastructure link, but there is no
	reachability through the stub network to any link beyond that one.</t>
      <t>
	Eliminating transit routing is not intended to be seen as a virtue in itself, but rather as a simplifying assumption that
	makes it possible to solve a subset of the general problem of automating multi-link networks.
	Stub networks may be globally reachable, or may be only locally reachable. A
	host on a locally reachable stub network can only interoperate with hosts on the network link(s) to which it is connected.
	A host on a globally reachable stub network should be able to interoperate with hosts on other network links in the same
	infrastructure as well as hosts on the global internet.</t>
      <t>
	It may be noted that just as you can plug several Home Gateway devices together in series to form multi-layer NATs, there is
	nothing preventing the owner of a stub network router from attaching it to a stub network as if that network were its
	infrastructure network. In the case of an IoT wireless network, there may be no way to do this, nor would it be desirable,
	but a stub router that uses ethernet on both the infrastructure and stub network sides could be connected this way. Nothing
	in this document is intended to prevent this from being done, but neither do we attempt to solve the problems that this
	could create.</t>
      <t>
	The goal of this document is to describe the minimal set of changes or behaviors required to use existing IETF
	specifications to support the stub network use case. The result is intended to be deployable on existing networks without
	requiring changes to those networks.</t>
      <section anchor="interop-goals"><name>Interoperability Goals</name>
	<t>
	  The specific goal is for hosts on the stub network to be able to interoperate with hosts on the adjacent infrastructure
	  link or links. What we mean by "interoperate" is that a host on a stub network:
	</t>
	<ul>
	  <li>
	    is discoverable by hosts attached to adjacent infrastructure links</li>
	  <li>
	    is able to discover hosts attached to adjacent infrastructure links</li>
	  <li>
	    is able to discover hosts on the Internet</li>
	  <li>
	    is able to acquire an IP address that can be used to communicate with hosts attached to adjacent
	    infrastructure links</li>
	  <li>
	    has reachability to the hosts attached to adjacent infrastructure links</li>
	  <li>
	    is reachable by hosts on the adjacent infrastructure link</li>
	  <li>
	    is able to reach hosts on the Internet</li>
	</ul>
	<t>
	  Discoverability here means "discoverable using DNS, or DNS Service Discovery".  DNS Service Discovery includes multicast
	  DNS <xref target="RFC6762"/>. As an example, when one host connected to
	  a specific WiFi network wishes to discover services on hosts connected to that same WiFi network, it can do so using
	  multicast DNS.  Similarly, when a host on some other network
	  wishes to discover the same service, it must use DNS-based DNS Service Discovery <xref target="RFC6763"/>.  In both cases,
	  "discoverable using DNS" means that the host has one or more entries in the DNS that serve to make it discoverable.</t>
	<t>
	  We lump discoverability in with reachability and addressability, both of which are essentially Layer 3 issues. The reason
	  for this is that it does us no good to automatically set up connectivity between stub network hosts and infrastructure
	  hosts if the infrastructure hosts have no means to learn about the availability of services provided by stub network
	  hosts. For stub network hosts that only consume cloud services this will not be an issue, but for stub networks that
	  provide services, such as IoT devices on stub networks with incompatible media, discoverability is necessary in order for
	  stub network connectivity to be useful.</t>
	<t>
	  Ability to acquire an IP address that can be used to communicate means that the IP address a host on the stub network
	  acquires can be used to communicate with it by hosts not on the stub network.</t>
	<t>
	  Reachability to hosts on adjacent infrastructure links means that when a host (A) on the stub network has a datagram destined for the IP
	  address of a host (B) on an adjacent infrastructure link, host (A) knows of a next-hop router to which it can send the
	  datagram, so that it will ultimately reach host (B) on the infrastructure network.</t>
	<t>
	  Reachability from hosts on adjacent infrastructure links means that when host (A) on an adjacent infrastructure link has a datagram destined for the IP
	  address of a host (B) on the stub network, a next-hop router is known by host (A) such that, when the datagram is sent to
	  that router, it will ultimately reach host (B) on the stub network.</t>
	<t>
	  To achieve the reachability goal described above, this document assumes hosts attempting to reach destinations on the stub
	  network maintain a routing table - Type C hosts as defined in <xref target="RFC4191" section="3.1"/>). Type A and Type B
	  hosts are out-of-scope for this document.
	</t>
      </section>
      <section anchor="usability-goals"><name>Usability Goals</name>
	<t>
	  In addition to the interoperability goals we've described above, the additional goal for stub networks is that they be
	  able to be connected automatically, with no user intervention.  The experience of connecting a stub network to an
	  infrastructure should be as straightforward as connecting a new host to the same infrastructure network.</t>
	<t>
	  Stub routers can be attached to any network. However, there are network configurations where a stub router will not work.
	  An analysis of networks where stub routers could be attached is provided in <xref target="net-analysis"/>.</t>
      </section>
    </section>

    <section>
      <name>Glossary</name>
      <dl>
	<dt>Node:</dt>
	<dd>A device that implements IPv6.</dd>
	<dt>Router:</dt>
	<dd>A node that forwards IPv6 packets not explicitly addressed to itself.  (See Note in <xref target="RFC8200" section="2" sectionFormat="of"/>.)</dd>
	<dt>Host:</dt>
	<dd>Any node that is not a router.  (See Note in <xref target="RFC8200" section="2" sectionFormat="of"/>.)</dd>
	<dt>Addressability:</dt>
	<dd>The ability to associate each node on a link with its own IPv6 address.</dd>
	<dt>
	  Reachability:</dt><dd>Given an IPv6 destination address that is not on-link for any link to which a node is attached, the
	  information required that allows the node to send packets to a router that can forward those packets towards a link where
	  the destination address is on-link.</dd>
	<dt>Adjacent Infrastructure Link (AIL):</dt>
	<dd>any link to which a stub network router is directly attached, that is part of an infrastructure network and is not the
	  stub network.</dd>
        <dt>Home Gateway:</dt>
        <dd>A device, such as a CE Router <xref target="RFC7084"/>, that is intended to connect a single uplink network to a
          Local-Area Network. A CE router may be provided by an ISP and only capable of connecting directly to the ISP's
          means of service delivery, e.g. Cable or DSL, or it may have an ethernet port on the WAN side and one or more ethernet
          ports, plus WiFi, on the LAN side.</dd>
	<dt>Infrastructure network:</dt>
	<dd>
	  the network infrastructure to which a stub router connects. This network can be a single link, or a network of links. The
	  network is typically formed by a Home Gateway, which may also provide some services, such as a DNS resolver, a DHCPv4
	  server, and a DHCPv6 prefix delegation server, for example.</dd>
	<dt>Off-Stub-Network-Routable (OSNR) Prefix:</dt>
	<dd>a prefix advertised on the stub network that can be used for communication with hosts not on the stub network.</dd>
	<dt>Stub Network:</dt>
	<dd>A network link that is connected by one or more Stub Routers to an AIL an infrastructure network, but
	  is not used for transit between that link and any other link. <xref target="RFC2328" section="2.1" sectionFormat="of"/>
	  describes the distinction between stub networks and transit networks from a topological perspective: a stub network is
	  simply any network that does not provide transit within a routing fabric. There is reachability through a stub network
	  router to hosts on the stub network, but there is no reachability through the stub network to any link beyond the
	  stub network link.</dd>
	<dt>Stub Router:</dt>
	<dd>A router that provides connectivity between a stub network and an infrastructure network. A stub router may also provide
	  connectivity between other networks: the term "stub router" refers specifically to its role in providing connectivity to
	  a stub network. For example, a Home Gateway may provide connectivity between a provider network (WAN) and a home network
	  (LAN), while at the same time providing connectivity between the LAN and a stub network. What distinguishes the LAN from
	  the stub network in this case is that the LAN is potentially a candidate to act as a transit network to reach other routers,
	  whereas the stub network is not.</dd>
	<dt>RA Beacon:</dt>
	<dd>A Router Advertisement (RA) that is multicast on a link so that hosts can see that the router is still present. This is in
	  contrast to a unicast RA sent in response to the router solicit.</dd>
	<dt>ULA Site Prefix:</dt>
	<dd>A Unique Local Address /48 prefix <xref target="RFC4193"/> randomly generated by each stub router for use in allocating
	  ULA Link Prefixes to the stub network and the adjacent infrastructure link.</dd>
	<dt>ULA Link Prefix:</dt>
	<dd>A Unique Local Address /64 prefix allocated from the ULA site prefix. Stub routers can use ULA Link prefixes to provide
	addressability on the stub network and/or adjacent infrastructure link as needed. If a stub router is doing NAT64, the NAT64
	prefix is also a ULA Link Prefix. A total of 65,536 ULA link prefixes can be allocated from the ULA Site prefix.</dd>
      </dl>
    </section>

    <section anchor="constants">
      <name>Constants</name>
      <t>
	This section describes the meaning of and gives default values for various constants used in this document.</t>
      <dl>
	<dt>STALE_RA_TIME (default: 10 minutes):</dt>
	<dd>
	  The amount of time that can pass after the last time a router advertisement from a particular router has
	  been received before we assume the router is no longer present. This is a stopgap in case the router is reachable but has
	  silently stopped advertising a prefix; this situation is unlikely, but if it does happen, new devices joining the
	  infrastructure network will not be able to reach devices on the stub network until the stub router decides that the router
	  that advertised the suitable prefix is stale.</dd>
	<dt>STUB_PROVIDED_PREFIX_LIFETIME (default: 30 minutes):</dt>
	<dd>
	  The valid and preferred lifetime the stub router will advertise. This should be long enough that a
	  host is actually willing to use it, and obviously should also be long enough that a missed RA will not cause the host
	  to stop using it. The values suggested here allow ten RAs to be missed before the host will stop using the
	  prefix.</dd>
	<dt>RA_BEACON_INTERVAL (default: 3 minutes):</dt>
	<dd>
	  How often the stub router will transmit an RA beacon. This should be frequent enough that a missed Router
	  Solicit (e.g. due to congestion on a WiFi link) will not result in an extremely long outage (assuming the congestion
	  passes before the RA is sent, of course).</dd>
	<dt>PREFIX_DELEGATION_INTERVAL (default: 30 minutes):</dt>
	<dd>
	  The lifetime a stub router should request for a DHCPv6-delegated prefix. The longer this is, the more
	  prefixes will be consumed on a network where stub routers are not stable. The lifetime here is chosen to be long enough
	  that a reboot of the DHCP server will not prevent the prefix being renewed. It happens to coincide with the value of
	  STUB_PROVIDED_PREFIX_LIFETIME, but the two should not be considered to be equivalent.</dd>
	<dt>MAX_FLAGS_COPY_TIME (default: 150 minutes):</dt>
	<dd>
	  The maximum time period, after receiving an RA, that a stub router can copy flag values from the
	  header of this RA for use in its own transmitted RAs.</dd>
	<dt>MAX_SUITABLE_REACHABLE_TIME (default: 60 seconds):</dt>
	<dd>
	  The maximum ReachableTime value that a router can have in the Neighbor Table before any suitable
	  prefixes it has advertised are no longer considered suitable.</dd>
	<dt>STUB_NETWORK_REACHABLE_TIME (default: 30 minutes)</dt>
	<dd>The reachable time that will be specified in Route Information Options sent by the stub router</dd>
      </dl>
    </section>

    <section>
      <name>Conventions and Terminology Used in This Document</name>
      <t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
	"MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/>
        <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
      </t>
    </section>

    <section>
      <name>Support for adjacent infrastructure links</name>
      <t>
	We assume that the AIL supports Neighbor Discovery <xref target="RFC4861"/>, and specifically that
	routers and on-link prefixes can be advertised using router advertisements and discovered using neighbor solicits. The stub
	network link may also support this, or may use some different mechanism. This section specifies how advertisement of the
	on-link prefix for such links is managed. In this section we will use the term "Advertising Interface" as described in
	<xref target="RFC4861" section="6.2.2"/>.</t>
      <t>
	Support for AILS on networks where Neighbor Discovery is not supported is out of scope for this document. Stub routers
	do not provide routing between AILs when connected to more than one such link.</t>
      <section>
	<name>Managing addressability on an adjacent infrastructure link</name>
	<t>
	  In order to provide IPv6 routing to the stub network, IPv6 addressing must be available on each AIL.
	  Ideally such addressing is already present on these links, and need not be provided. However, if it is not present,
	  the stub router must provide it.
	</t>
	<section anchor="suitable">
	  <name>Suitable On-Link Prefixes</name>
	  <t>
	    Stub routers must evaluate prefixes that are advertised on-link as to their suitability for use in communicating with
	    devices on the stub network. If no suitable prefix is found, a stub router MUST advertise one.
	  </t><t>
	    An on-link prefix is considered suitable if it is advertised on the link in a Prefix Information option
	    (<xref target="RFC4861" section="4.6.2" sectionFormat="comma" />) with the following Prefix Information option header
	    values:
	  </t>
	  <ul>
	    <li>Prefix Length value is 64,</li>
            <li>'L' bit is set,</li>
	    <li>'A' bit is set, and</li>
	    <li>Preferred Lifetime of 30 minutes or more.</li>
	  </ul>
	  <t>
	    A prefix is not considered a suitable on-link prefix if the 'L' bit is set, but the 'A' bit is not set. This indicates
	    that node addressability is being managed using DHCPv6. Nodes are not required to use DHCPv6 to acquire addresses, so a
	    prefix that requires the use of DHCPv6 can't be considered "suitable"&mdash;not all hosts can actually use it.
	  </t>
	  <t>
	    Note: there can be layer two networks where neighbor discovery is not supported and therefore we cannot set the 'L' bit,
	    but could set the 'A' bit. The behavior of stub networks when connecting to such networks is out of scope for this document.
	  </t>
	  <t>
	    A prefix is considered to be advertised on the link if, when a Router Solicit message
	    (<xref target="RFC4861" section="4.1" sectionFormat="comma"/>) is sent, a Router Advertisement message is received in
	    response which contains a prefix information option (<xref target="RFC4861" section="4.6.2" sectionFormat="comma"/>)
	    for that prefix.
	  </t><t>
	    After an RA message containing a suitable prefix has been received, it can be assumed for some period of time thereafter that that prefix
	    is still valid on the link. However, prefix lifetimes and router lifetimes are often quite long. In addition to knowing that
	    a prefix has been advertised on the link in the past, and is still valid, we must therefore ensure
	    that at least one router that has advertised this prefix is still alive to respond to router advertisements.</t>
	</section>
	<section anchor="suitable-prefix-state-machine">
	  <name>State Machine for maintaining a suitable on-link prefix on an infrastructure link</name>
	  <t>
	    The possible states of an interface connected to an AIL are described here, along with actions
	    required to be taken to monitor the state. The purpose of the state machine described here is to ensure that at all
	    times, when a new host arrives on the AIL, it is able to acquire an IPv6 address on that
	    link.</t>
	  <t>
	    During all of the states mentioned here except for state-unknown, the SNAC router is expected to treat the
	    infrastructure interface as an Advertising Interface as described in <xref target="RFC4861" section="6.2.2"/>.
	    There are two sets of information that need to be sent in an RA; if neither is present, then the SNAC router
	    SHOULD NOT send an RA even if it is treating the infrastructure interface as an advertising interface.
	  </t>
	  <t>
	    These two sets of information are the on-link prefix, if any, that is to be advertised. Whether or not such a prefix is
	    advertised, and what exactly is advertised regarding that prefix, is determined by the state machine. The other set of
	    information is a set of routes to prefixes on the SNAC network. Whenever we know of a reachable (scope is not
	    link-local) prefix on the SNAC network, we include an RIO option in the RA on the infrastructure network indicating that
	    that prefix is reachable through the SNAC router.
	  </t>
	  <t>
	    It is important to note that it is possible for an on-link, routable prefix to be advertised and then withdrawn on the
	    SNAC network, but for it to still be valid, and for there to still be some communication occurring using that prefix.
	    In order to avoid prematurely interrupting such communication, the SNAC router MUST maintain a list of prefixes known
	    to be valid on the SNAC network, even if those prefixes have been deprecated, and MUST include RIO options for all
	    such prefixes in the RAs that it sends on the adjacent infrastructure link.
	  </t>
	  <section anchor="state-unknown">
	    <name>Status of IP addressability on adjacent infrastructure link unknown (STATE-UNKNOWN)</name>
	    <t>
	      When the stub router interface first connects to the AIL, it MUST begin router discovery.</t>
	    <t>
	      If, after router discovery has completed, no suitable on-link prefix has been found, the router moves this interface to
	      STATE-BEGIN-ADVERTISING (<xref target="state-begin-advertising"/>).</t>
	    <t>
	      If, during router discovery, a suitable on-link prefix is found, the router moves the interface to
	      STATE-SUITABLE (<xref target="state-suitable"/>).</t>
	    <t>
	      In this state, the stub router MUST NOT treat this interface as an advertising interface as described in
	      <xref target="RFC4861" section="6.2.2"/>.</t>
	  </section>
	  <section anchor="state-suitable">
	    <name>IP addressability already present on adjacent infrastructure link (STATE-SUITABLE)</name>
	    <t>
	      When a new host appears on the AIL and sends an initial router solicit, if it does not
	      receive a suitable on-link prefix, it will not be able to communicate. Consequently, the stub router MUST monitor router
	      solicits and advertisements on the interface in order to determine whether a prefix that has been advertised on the
	      link is still being advertised. To accomplish this we have two complementary methods: router staleness detection and
	      neighbor unreachability detection.</t>
	    <section anchor="staleness"><name>Router staleness detection</name>
	      <t>
		The stub router MUST listen for router advertisements on the AIL to which the interface is
		attached, and record the time at which each router advertisement was received. The router MUST NOT consider any router
		advertisement that is older than STALE_RA_TIME to be suitable.  When the last non-stale router advertisement containing
		a suitable prefixes on the link is marked stale, the stub router MUST move the interface to STATE-BEGIN-ADVERTISING.</t>
	    </section>
	    <section anchor="nud"><name>Router Unreachability Detection</name>
	      <t>
		For each suitable route, the stub router MUST monitor the state of reachability to the router(s) that
		advertised it as described in (<xref target="RFC4861" section="7.3.1" sectionFormat="comma"/>) using a ReachableTime
		value of no more than MAX_SUITABLE_REACHABLE_TIME. The reason for this is that if no router providing the on-link
		prefix on the AIL is reachable, then when a new host joins the network, it will have no suitable on-link
		prefix to use for autoconfiguration, and thus will be unable to communicate with hosts on the stub network.</t>
	      <t>
		Whenever the ReachableTime for a router advertising a suitable prefix exceeds MAX_SUITABLE_REACHABLE_TIME, the stub router
		MUST send unicast neighbor solicits as described in <xref target="RFC4861" section="7.2.2"/> until either a response
		is received, which resets ReachableTime to zero, or the maximum number of retransmissions has been sent.</t>
	      <t>
		The stub router MUST listen for router solicits on the AIL. When a router solicit is
		received, if none of the on-link routers on the AIL are marked reachable, the stub router
		MUST move this interface to the STATE-BEGIN-ADVERTISING state (<xref target="state-begin-advertising"/>).</t>
	      <t>
		If a RA beacon interval arrives, and there are no routers advertising suitable prefixes that have a ReachableTime that is
		less than MAX_SUITABLE_REACHABLE_TIME, then the router MUST move this interface to the STATE-BEGIN-ADVERTISING state.</t>
	    </section>
	  </section>
	  <section anchor="state-begin-advertising">
	    <name>IP addressability not present on adjacent infrastructure link (STATE-BEGIN-ADVERTISING)</name>
	    <t>
	      In this state, the stub router generates its own on-link prefix for the interface. This prefix has a valid and
	      preferred lifetime of STUB_PROVIDED_PREFIX_LIFETIME seconds. The stub router sends a router advertisement (RA) containing
	      this prefix in a Prefix Information Option (PIO). In the PIO, the 'A' flag bit (autonomous configuration)
	      flag <xref target="RFC4861" section="4.6.2"/> MUST be set and the 'L' flag bit (on-link prefix) MUST be set.
	      Link-layer technologies that require the 'L' flag bit to be cleared are out of scope of this document.
        </t>
        <t>
          The Stub Router flag (<xref target="I-D.hui-stub-router-ra-flag"/>) MUST be set in the RA flags field.
	      The values of the M and O flags MUST be copied from the respective M/O flag values seen in the
          most recent (unicast or multicast) RA received from a non-stub-router.
          For the selection of the most recent RA, the following RAs MUST be excluded:
        </t>
        <ul>
            <li>An RA received from a router longer ago than the Router Lifetime period indicated in the RA header. This only
            applies for a non-zero Router Lifetime value.</li>
            <li>An RA received more than MAX_FLAGS_COPY_TIME ago.</li>
        </ul>
        <t>
	      If there is no recent RA from a non-stub-router, both M and O flags MUST be cleared, unless the stub router rebooted
          recently. After a reboot, if no recent RA is received from a non-stub router, but a recent RA has been
          received from a stub router, the values for the M and O flags provided by that stub router MUST be copied. After
          MAX_FLAGS_COPY_TIME after reboot, the stub router MUST go back to the regular behavior defined above. This avoids
          a situation where a stub router that has rebooted starts to advertise different M/O flag values
          than other stub routers present on the same link.</t>
	    <t>
	      The sent router advertisement MUST also include a Route Information option (<xref target="RFC4191" section="2.3"/>) for
	      each routable prefix advertised on the stub network. If the stub router is also a normal router (e.g. a home WiFi
	      router), it SHOULD include all other routes that it is advertising in the RA, if there is space.</t>
	    <t>
	      After having sent the initial router advertisement, the stub router moves the interface into the STATE-ADVERTISING-SUITABLE
	      state (<xref target="state-advertising-suitable"/>).</t>
	  </section>
	  <section anchor="state-advertising-suitable">
	    <name>IP addressability not present on adjacent infrastructure link (STATE-ADVERTISING-SUITABLE)</name>
	    <t>
	      When entering this state, if the router MUST begin treating the interface as an Advertising Interface as
	      described in <xref target="RFC4861" section="6.2.2"/> if it is not already doing so.</t>
	    <t>
	      The stub router sends a router advertisement message, as described in <xref target="state-begin-advertising"/>, every
	      RA_BEACON_INTERVAL seconds.</t>
	    <t>
	      The stub router may receive a router advertisement containing one or more suitable on-link prefixes on the AIL.
	      If any of these prefixes are different than the prefix the stub router is advertising as the on-link suitable
	      prefix, and the Stub Router flag is not set in in the Router Advertisement flags field, the stub router moves
	      the interface to STATE-DEPRECATING (<xref target="state-deprecating"/>).</t>
	    <t>
	      If the stub router bit is set in the RA header flags field, then one of the following must be true in order for that prefix to
	      be considered suitable:</t>
	    <ul>
	      <li>
		The prefixes are equal. In this case, the interface remains in STATE-ADVERTISING-SUITABLE.</li>
	      <li>
		The prefix the stub router is advertising is a ULA prefix <xref target="RFC4193"/>, and the received prefix is a non-ULA
		prefix. In this case, the interface moves into the STATE-DEPRECATING (<xref target="state-deprecating"/>) state.</li>
	      <li>
		Both prefixes are ULA prefixes, and the received prefix, considered as a 128-bit big-endian unsigned integer,
		is numerically lower, then the interface moves to STATE-DEPRECATING (<xref target="state-deprecating"/>.</li>
	      <li>
		Otherwise the interface remains in STATE-ADVERTISING-SUITABLE.</li>
	    </ul>
	  </section>
	  <section anchor="state-deprecating">
	    <name>Stub router deprecating the on-link prefix it is advertising (STATE-DEPRECATING)</name>
	    <t>
	      On entry to this state, the stub router has been treating the interface as an Advertising Interface as described in
	      <xref target="RFC4861" section="6.2.2"/>, and MUST continue to do so.</t>
	    <t>
	      When the stub router has detected the availability of suitable on-link prefix on the AIL to which the interface is
	      attached, and that prefix is preferable to the one it is advertising, it continues to advertise its own prefix, but
	      deprecates it:
	    </t>
	    <ul>
	      <li>
		the preferred lifetime for its prefix should be set to zero in subsequent router advertisement messages.</li>
	      <li>
		the valid lifetime for its prefix should be reduced with each subsequent router advertisement messages.</li>
	      <li>
		the usability of the infrastructure-provided on-link prefix should be monitored as in the STATE-SUITABLE state; if
		during the deprecation period, the stub router detects that there are no longer any suitable prefixes on the link, as
		described in <xref target="staleness"/> or in <xref target="nud"/>, it MUST return the interface to the
		STATE-BEGIN-ADVERTISING (<xref target="state-advertising-suitable"/>) state and resume advertising its prefix with the
		valid and preferred lifetimes described there.</li>
	    </ul>
	    <t>
	      In this state, the valid lifetime (VALID) is computed based on three values: the current time when a router
	      advertisement is being generated (NOW), the time at which the new suitable on-link prefix advertisement was received
	      (DEPRECATE_TIME), and STUB_PROVIDED_PREFIX_LIFETIME. All of these values are in seconds. VALID is computed as follows:
	    </t>
	    <t>
	      VALID = STUB_PROVIDED_PREFIX_LIFETIME - (NOW - DEPRECATE_TIME)
	    </t>
	    <t>
	      If VALID is less than RA_BEACON_INTERVAL, the stub router does not include the deprecated prefix in the router
	      advertisement. Note that VALID could be less than zero. Otherwise, the prefix is provided in the advertisement, but with
	      a valid lifetime of VALID.
	    </t>
	  </section>
	</section>
      </section>
      <section anchor="stub-addressability">
	<name>Managing addressability on the stub network</name>
	<t>
	  How addressability is managed on stub networks depends on the nature of the stub network. For some stub networks, the stub
	  router can be sure that it is the only router. For example, a stub router that is providing a Wi-Fi network for tethering
	  will advertise its own SSID and use its own joining credentials; in this case, it can assume that it is the only router
	  for that network, and advertise a default route and on-link prefix just like any other router.
	</t><t>
	  However, some stub networks are more cooperative in nature, for example IP mesh networks. On such networks, multiple stub
	  routers may be present and be providing addressability and reachability.
	</t><t>
	  In either case, some stub router connected to the stub network MUST provide a suitable on-link prefix (the OSNR prefix) for
	  the stub network.  If the stub network is a multicast-capable medium where Router Advertisements are used for router
	  discovery, the same mechanism described in <xref target="suitable-prefix-state-machine"/> is used.
	</t><t>
	  Stub networks that do not support the use of Router Advertisements for router discovery must use some similar
	  mechanism that is compatible with that type of network. Describing the process of establishing a common OSNR prefix on
	  such networks is out of scope for this document.
	</t>
	<section>
	  <name>Maintenance across stub router restarts</name>
	  <t>
	    Stub routers may restart from time to time; when a restart occurs, the stub router may have been advertising state to the
	    network which, following the restart, is no longer required.
	  </t><t>
	    For example, suppose there are two stub routers connected to the same infrastructure link. When the first stub router is
	    restarted, the second takes over providing an on-link prefix. Now the first router rejoins the link. It sees that the
	    second stub router&apos;s prefix is advertised on the infrastructure link, and therefore does not advertise its own.
	  </t><t>
	    This behavior can cause problems because the first stub router no longer sees the on-link prefix it had been
	    advertising on infrastructure as on-link. Consequently, if it receives a packet to forward to such an address, it will
	    forward that packet directly to a default router, if one is present; otherwise, it will have no route to the destination,
	    and will drop the packet.
	  </t><t>
	    To address this problem, stub routers SHOULD remember the last time a prefix was advertised across restarts. On restart,
	    the router configures the prefix on its interface but does not advertise it in Router Advertisements. Devices that are
	    still using that prefix will be seen as on-link to the router, and so packets will be delivered using ND on-link rather
	    than forwarded to the default router.
	  </t><t>
	    When a stub router has only flash memory with limited write lifetime, it may be inappropriate to do a write to flash
	    every time an RA beacon containing a prefix is sent. In this case, the router SHOULD record the set of prefixes that
	    have been advertised on infrastructure and the maximum valid lifetime that was advertised. On restart, the router should
	    assume that hosts on the infrastructure link have received advertisements for any such prefixes.
	  </t><t>
            When possible, it is best if all stub routers serving a particular stub network use the same 64-bit prefix on the
            AIL. For example, Thread stub routers use bits from the Thread Extended PAN ID to generate the ULA prefix's Global ID
            and Subnet ID. The Global ID generation conforms to <xref target="RFC4193"/> because the Extended PAN ID is generated
            randomly using the same mechanism that is specified in RFC 4193 for the ULA prefix bits.
          </t>
	</section>
	<section>
	  <name>Generating a per-stub-router ULA Site Prefix</name>
	  <t>
	    In order to be able to provide addressability either on the stub network or on an adjacent infrastructure network, a stub
	    router MUST allocate its own ULA Site Pefix. ULA prefixes, described in Unique Local IPv6 Unicast Addresses
	    (<xref target="RFC4193"/>) are randomly allocated prefixes. A stub router MUST allocate a single ULA Site Prefix for use in
	    providing on-link prefixes to the stub network and the adjacent infrastructure link as described in <xref target="state-begin-advertising"/>.
	  </t><t>
	    Any ULA Link Prefixes allocated by a stub router SHOULD be maintained across reboots, and SHOULD remain stable over time. (TBD:
            mention the SHOULD exception cases) However, for privacy reasons, a stub router that roams from network to network
            SHOULD allocate a different ULA Link Prefix each time it connects to a different infrastructure network, unless configured to
            behave otherwise.
	  </t>
	</section>
	<section>
	  <name>Using DHCPv6 Prefix Delegation to acquire a prefix to provide addressability</name>
          <t>
            If DHCPv6 prefix delegation and IPv6 service are both available on the infrastructure link, then the stub router MUST
            attempt to acquire a prefix using DHCPv6 prefix delegation. Using a prefix provided by the infrastructure DHCPv6 prefix
            delegation service means (assuming the infrastructure is configured correctly) that routing is possible between the stub
            network links and all links on the infrastructure network, and possibly to the general internet.
	  </t><t>
	    By contrast, if the prefix generated by the stub router is used, reachability is only possible between the stub network
	    and the AIL. The OSNR prefix in this case is not known to the infrastructure network routing fabric, so even though
	    packets might be able to be forwarded to the intended destination, there would be no return path. So when the only
	    prefix that is available is the one provided by the stub router, cloud services will not be reachable via IPv6, and
	    infrastructure-provided NAT64 will not work. Therefore, when the stub router is able to successfully acquire a prefix
	    using DHCPv6 PD, it MUST use DHCPv6 PD rather than the ULA Link prefix it allocated for the stub network out of its ULA
	    Site Prefix.
          </t><t>
            A stub router SHOULD request stub network prefixes with length 64. If the stub router obtains a prefix with length less
            than 64, it SHOULD generate a /64 from the obtained prefix by padding with zeros. If the stub router obtains a prefix
            with length greater than 64, the stub router MUST treat the prefix as unsuitable and allocate a ULA Link Prefix out of
            its ULA Site Prefix instead.
          </t>
	  <t>
	    A DHCPv6-PD client can request a particular lease interval for the DHCPv6-delegated prefix. However, there is no
	    particular reason for a SNAC router to specify this interval.
	  </t>
	  <section>
	    <name>Lifetime of IPv6 prefixes acquired using DHCPv6 Prefix Delegation</name>
	    <t>
	      It is possible that a SNAC router might obtain a prefix from a DHCPv6 server using prefix delegation and then something
	      about the infrastructure network attachment might change that affects the validity of that prefix for use on the stub
	      network. The section of <xref target="I-D.ietf-dhc-rfc8415bis"/> titled "Refreshing Configuration Information"
	      discusses the various scenarios that can occur. We assume that the DHCPv6 prefix delegation client being used by
	      the SNAC router conforms to this specification.
	    </t>
	    <t>
	      Situations that can occur include (but are not limited to):
	    </t>
	    <ul>
	      <li>DHCPv6 server becomes unavailable</li>
	      <li>Stub router is moved to a different link</li>
	      <li>A renumnbering event results in the old prefix being replaced with a new one</li>
	    </ul>
	    <t>
	      The SNAC router MUST NOT use a prefix once the DHCPv6-PD client has determined that it is no longer valid. If the
	      DHCPv6-PD client provides a new prefix, and the old prefix is still valid, the SNAC router SHOULD explicitly deprecate
	      the old prefix at the same time that it first advertises the new prefix.</t>
	    <t>
	      If the DHCPv6-PD client determines that the prefix it provided to use as the OSNR prefix is no longer valid, and no
	      replacement prefix is provided by the DHCPv6 server, then the SNAC router MUST switch to the ULA link prefix that it
	      has allocated for use on the SNAC network.  In the case that the DHCPv6-PD client is unable to renew its lease on the
	      current OSNR prefix, and time between the T2 interval for the prefix assignment
	      <xref target="I-D.ietf-dhc-rfc8415bis" section="21.4" sectionFormat="of"/> and the end of the lease has been
	      reached, then the SNAC router MUST deprecate the DHCPv6-PD-provided OSNR prefix and begin advertising the ULA link
	      prefix.
	    </t>
	    <t>
	      A failure to renew the DHCPv6-PD-provided OSNR prefix could be because the SNAC network has been disconnected from one
	      AIL and moved to a different AIL. In this situation, if the new AIL also has IPv6 service and DHCPv6-PD service, the
	      DHCPv6 client will get a clear indication that the old prefix is no longer valid. However, it may be that no DHCPv6-PD
	      service is available on the new link, either because it is an IPv4-only link or because it's an IPv6-capable link that
	      doesn't provide DHCPv6 service. In this situation, if the SNAC network remains connected to the link and no DHCPv6 service
	      appears, the DHCPv6-PD-provided OSNR prefix will eventually time out and be replaced. The SNAC router SHOULD NOT attempt
	      to replace it prior to this normal timeout process, because there is no benefit to changing the OSNR prefix on the
	      SNAC network in such a situation, and it's possible that the SNAC router will return to the other link before the
	      OSNR prefix expires.
	    </t>
        </section>
      </section>
      </section>
      <section>
	<name>Managing reachability on the adjacent infrastructure link</name>
	<t>
	  Stub routers MUST advertise reachability to stub network OSNR prefixes on any AIL to which they are connected. If the stub
	  router is advertising a suitable prefix on any interface, any such prefixes MUST be advertised on that interface in the same
	  router advertisement that is advertising the suitable prefix, to avoid unnecessary multicast traffic.
	</t><t>
	  Each stub network will have some set of prefixes that are advertised as on-link for that network. A stub router connected
	  to that stub network SHOULD advertise reachability to all such prefixes on any AIL to which it is attached using router
	  advertisements.
	</t><t>
	  A stub router SHOULD NOT advertise itself as a default router on an AIL by setting a non-zero Router Lifetime value in the
	  header of its Router Advertisements. The exception to this rule is the case where the stub router itself is the default router
	  for a particular AIL: for example, it may be the home router providing connectivity to an ISP.
	</t>
      </section>
      <section anchor="stub-reachability">
	<name>Managing reachability on the stub network</name>
	<t>
	  The stub router MAY advertise itself as a default router on the stub network, if it itself has a default route on the
	  AIL. In some cases it may not be desirable to advertise reachability to the Internet as a whole; in this case the stub
	  router is not required to advertise itself as a default router.
	</t><t>
	  If the stub router is not advertising itself as a default router on the stub network, it MUST advertise reachability to any
	  prefixes that are being advertised as on-link on AILs to which it is attached. This is true for prefixes it is advertising,
	  and for other prefixes being advertised on that link.
	</t><t>
	  Note that in some stub network configurations, it is possible for more than one stub router to be connected to the stub
	  network, and each stub router may be connected to a different AIL. In this case, a stub router advertising a default route
	  may receive a packet destined for a link that is not an AIL for that router, but is an AIL for a different router. In such a
	  case, if the infrastructure is not capable of routing between these two AILs, a packet which could have been delivered by
	  another stub router will be lost by the stub router that received it.</t>
	<t>
	  Consequently, stub routers SHOULD be configurable to not advertise themselves as default routers on the stub network. Stub
	  routers SHOULD be configurable to explicitly advertise AIL prefixes on the stub network even if they are advertising as a
	  default router. The mechanisms by which such configuration can be accomplished are out of scope for this document.
	</t>
	<t>
	  It is also possible that stub routers for more than one stub network may be connected to the same AIL.
	  In this case, the stub routers will be advertising Router Information options in their router advertisements for
	  their OSNR prefixes. Stub routers MUST track the presence of such routes, and MUST advertise reachability to them on
	  interfaces connected to stub networks.</t>
      </section>
      <section>
	<name>Providing discoverability between stub network links and infrastructure network links</name>
	<t>
	  Since DNS-SD is in wide use, and provides for ad-hoc, self-configuring advertising using the mDNS transport, this is a
	  suitable mandatory-to-implement protocol for stub networks, which must be able to attach to infrastructure networks
	  without the help of new mechanisms provided by the infrastructure. Therefore, stub routers MUST provide DNS-SD
	  service as described in this section.</t>
	<section>
	  <name>Discoverability by hosts on adjacent infrastructure links</name>
	  <t>
	    The adjacent infrastructure can be assumed to already enable some service discovery mechanism between hosts on
	    the infrastructure network, and can be assumed to provide a local DNS resolver. Therefore, we do not need to
	    define a stub-network-specific mechanism for providing these services on the infrastructure network.</t>
	  <t>
	    In some cases it will be necessary for hosts on the AIL to be able to discover devices on the
	    stub network. In other cases, this will be unnecessary or even undesirable. For example, it may be undesirable for
	    devices on an AIL to be able to discover devices on a Wi-Fi tether provided by a
	    mobile phone.</t>
	  <t>
	    One example of a use case for stub networks where such discovery is desirable is the constrained network use case. In this
	    case a low-power, low-cost stub network provides connectivity for devices that provide services to the infrastructure. For
	    such networks, it is necessary that devices on the infrastructure be able to discover devices on the stub network.</t>
	  <t>
	    The most basic use case for this is to provide feature parity with existing solutions like multicast DNS (mDNS). For
	    example, a light bulb with built-in Wi-Fi connectivity might be discoverable on the infrastructure link to which it is
	    connected, using mDNS, but likely is not discoverable on other links. To provide equivalent functionality for an equivalent
	    device on a constrained network that is a stub network, the stub network device must be discoverable on the infrastructure
	    link (which is an AIL from the perspective of the stub network).</t>
	  <t>
	    If services are to be advertised using DNS Service Discovery <xref target="RFC6763"/>, there are in principle two ways to
	    accomplish this. One is to present services on the stub network as a DNS zone which can then be configured as a browsing
	    domain in the DNS (<xref target="RFC6763" section="11" sectionFormat="comma"/>). The second is to advertise stub network
	    services on the AIL using multicast DNS (mDNS) <xref target="RFC6762"/>.</t>
	  <t>
	    Because this document defines behavior for stub routers connecting to infrastructure networks that do not provide any
	    new mechanism for integrating stub networks, there is no way for a stub router to provide DNS-SD service on an
	    infrastructure link in the form of a DNS zone in which to do discovery. Therefore, service on the infrastructure link
	    MUST be provided using an Advertising Proxy, as defined in <xref target="I-D.ietf-dnssd-advertising-proxy"/>.</t>
	  <t>
	    One limitation of this solution is that it requires that hosts on the stub network use the DNS-SD Service Registration
	    Protocol <xref target="I-D.ietf-dnssd-srp"/> to register their DNS-SD advertisements. This means that in the case of a
	    stub network used for WiFi tethering, hosts on the stub network will not be discoverable by hosts on the infrastructure
	    network. Any solution to this problem would require that the stub router provide a Discovery Proxy <xref target="RFC8766"/>.
	    However, a discovery proxy is queried using DNS, not mDNS. This requires assistance from the infrastructure network,
	    and is therefore out of scope for this document.</t>
	</section>
	<section>
	  <name>Providing discoverability of adjacent infrastructure hosts on the stub network</name>
	  <t>
	    Hosts on the stub network may need to discover hosts on the AIL, or on the stub network.  In
	    the IoT network example we've been using, there might be a light switch on the stub network which needs to be able to
	    actuate a light bulb connected to the AIL. In order to know where to send the actuation
	    messages, the light switch will need to be able to discover the light bulb's address somehow.</t>
	  <t>
	    Because the stub network is managed by stub routers, any DNS resolver that's available on the stub network will
	    necessarily be provided by one or more stub routers. This means that the stub router can enable discovery of hosts
	    on the infrastructure network by hosts on the stub network using a Discovery Proxy <xref target="RFC8766"/>.
	    The Discovery Proxy can be advertised as available to hosts on the stub network through the DNS resolver
	    provided on the stub network, as described in <xref target="RFC6763" section="11"/>.</t>
	  <t>
	    By implication, this means that stub routers MUST provide a DNS resolver. In addition, stub routers MUST provide
	    DNS zones for each AIL, and MUST list these zones in the list of default browsing zones
	    as defined in RFC6763. [[WG: we need to say how these zones are named. Or refer to the Advertising Proxy doc and
	    have that doc say how they are named.]]</t>
	  <t>
	    The stub router MUST also maintain an SRP registrar and use registrations made through that registrar to populate
	    a DNS zone which is advertised as a default browsing domain, as above. This SRP registrar MUST be advertised on the
	    stub network either using the dnssd-srp and/or dnssd-srp-tls service names or some stub-network-specific mechanism,
	    the details of which are out of scope for this document.</t>
	</section>
      </section>
    </section>
  
    <section>
      <name>Providing reachability to IPv4-only services to hosts on the stub network</name>
      <t>
	SNAC networks rely on IPv6 to enable routing between links, which would not be possible with IPv4 due to the lack of a
	standard mechanism similar to router advertisements in IPv4. However, it can stll be useful for hosts on the SNAC network
	to establish communications with IPv4-only hosts on the infrastructure network.
      </t>
      <t>
	Although NAT64 provides IPv6-only hosts with a way to reach IPv4 hosts, there is no easy way for an IPv4 host to
	use NAT64 to originate communication with an IPv6 host. Therefore, this document enables IPv6 hosts on the SNAC network
	to discover and reach with IPv4 hosts on infrastructure, but does not provide a way for IPv4-only hosts
	on infrastructure to communicate to IPv6 hosts on the SNAC network.
      </t>
      <t>
	This should be acceptable because hosts on the infrastructure network should not be IPv4-only, since the SNAC router is
	providing IPv6 service on the infrastructure network that is suitable for communicating using IPv6 to hosts on the SNAC
	network--there should not be any hosts on the infrastructure network that can't communicate with hosts on the stub network
	unless such hosts do not have an IPv6 stack at all.
      </t>
      <t>
	So the purpose of providing IPv4 connectivity for SNAC hosts is to enable communication with arbitrary IPv4 hosts which
	may not be on the AIL. This is accomplished by providing NAT64 address translation in the stub router, and by enabling
	service discovery using a Discovery Proxy.
      </t>
      <t>Stub Network routers must be capable of providing NAT64 themselves, and must be capable of discovering the availability
	of NAT64 service on the infrastructure network and providing it when it is available and suitable.
      </t>
      <t>
	Some network media may provide their own mechanisms for advertising NAT64 service to the stub network. If such a mechanism
	is available, stub routers MUST use the mechanism provided by the network medium used on the stub network to advertise
	NAT64 service. Otherwise, NAT64 service MUST be advertised using the PREF64 Router Advertisement option
	<xref target="RFC8781"/>.
      </t>
      <t>There are four possible combinations of circumstances in which to consider how to provide NAT64 service:</t>
      <ol>
	<li>
	  Infrastructure provides DHCPv6 PD support, and the infrastructure network provides NAT64
	</li>
	<li>
	  Infrastructure provides no DHCPv6 PD support, Infrastructure is providing NAT64, and there is no IPv4 on infrastructure
	</li>
	<li>
	  Infrastructure provides no DHCPv6 PD support, Infrastructure is providing NAT64, and there is IPv4 on
	  infrastructure
	</li>
	<li>
	  Infrastructure provides no DHCPv6 PD support, infrastructure is not providing NAT64 (and may also not be providing
	  IPv6), and there is IPv4 on infrastructure
	</li>
      </ol>
      <t>
	In the first case, infrastructure-provided NAT64 is preferred, and the stub router MUST advertise this service
	to the stub network.</t>
      <t>
	In the second case, there is no way to provide connectivity to the infrastructure: we don't have IPv6 routing other than to
	the adjacent infrastructure link, because we don't have a routable prefix, we don't have NAT64 for the same reason, and we
	don't have IPv4, so the stub router can't do NAT64 on its own. In this case, the stub router MUST NOT advertise NAT64
	service.</t>
      <t>
	In the third case, despite the infrastructure providing NAT64, we can't use it, so the stub router MUST provide its own
	NAT64 service.</t>
      <t>
	In the fourth case, the stub router MUST provide its own NAT64 service.</t>
      <t>
	An additional complication is that there may be more than one stub router connecting the stub network to infrastructure.  In
	this case, it may be desirable to limit the number of stub routers providing NAT64 service, or it may be acceptable for all
	stub routers to provide it.</t>
      <t>
	In the latter case, this should not be a problem: since each stub router is using its own ULA Site Prefix to provide NAT64,
	any 5-tuple that goes through a stub router's NAT64 translator will necessarily have as its destination an IPv6 address in a
	particular NAT64 prefix, and that address will select the correct stub router through which to send the packet for
	translation. This also works on the return path because each stub router has its own IPv4 address, and the return packet
	will be destined for that IPv4 packet, and hence will always return through the stub router that translated it on the way
	out.</t>
      <t>
	A further complication is that in some cases, some stub routers connected to the stub network may not be able to
	advertise an infrastructure-provided NAT64 prefix, while others may. In this case, when the infrastructure-provided NAT64
	service appears on the stub network, stub routers that are not able to advertise an infrastructure NAT64 service MUST
	NOT do so.</t>
      <t>
	To differentiate between infrastructure-provided NAT64 service and stub router-provided NAT64 service, stub routers that
	advertise infrastructure-provided NAT64 service MUST use a preference of medium for this service. Stub routers advertising
	their own service MUST use a preference of low.</t>
      <t>
	In some cases a stub router may be administratively configured with a NAT64 prefix. In this situation, the stub router
	MUST advertise the prefix with a preference of high.</t>
      <t>
	Stub routers must monitor the advertisement of other NAT64 prefixes on the stub network. If a stub router is advertising
	a NAT64 prefix, and a NAT64 prefix is advertised on the stub network with a higher preference, the stub router SHOULD
	deprecate the prefix it is advertising.</t>

      <section>
	<name>NAT64 provided by infrastructure</name>
	<t>
	  Stub networks are defined to be IPv6-only because it would be difficult to implement a stub network using IPv4
	  technology. However, stub network devices may need to be able to communicate with IPv4-only services either on the
	  infrastructure network, or on the global internet. Ideally, the infrastructure network fully supports IPv6, and all
	  services on the infrastructure network are IPv6-capable. In this case, perhaps the infrastructure network provides NAT64
	  service to IPv4-only hosts on the internet. In this ideal setting, the stub router need do nothing—the infrastructure
	  network is doing it all.
	</t><t>
	  In this situation, if there are multiple stub routers, each connected to the same AIL, there is
	  no need for special behavior—each stub router can advertise a default route, and any stub router may be used to route NAT64
	  traffic. If some stub routers are connected to different AILs than others, some of which support
	  NAT64 and some of which do not, then the default route may not carry traffic to the correct link for NAT64 service. In
	  this case, a more specific address to the infrastructure NAT64 prefix(es) MUST be advertised by those stub routers that
	  are able to discover it.
	</t>
	<t>
	  In order for infrastructure-provided NAT64 to work, the stub network must have an OSNR prefix that is known to the
	  infrastructure. Typically this means that the stub router must have acquired this prefix using DHCPv6 Prefix Delegation.
	  Unless otherwise configured to do so, the stub router MUST NOT advertise infrastructure-provided NAT64 service on the
	  stub network if it has not acquired the OSNR prefix through DHCPv6 Prefix Delegation.</t>
      </section>
      <section>
	<name>NAT64 provided by stub router(s)</name>
	<t>
	  Most infrastructure networks at present do not provide NAT64 service. Many infrastructure networks do not provide DHCPv6
	  Prefix Delegation. In these cases it is necessary for stub routers to be able to provide NAT64 service if IPv4 hosts are
	  to be reachable from the stub network. Therefore, stub routers MUST be capable of providing NAT64 service to the stub
	  network. When infrastructure-provided NAT64 service is not present or is not usable, and when no other NAT64 service is
	  already advertised on the stub network, stub routers MUST, by default, enable their own NAT64 service and advertise it
	  on the stub network.
	</t><t>
	  To provide NAT64 service, a stub router must allocate a NAT64 prefix. For convenience, the stub network allocates a single
	  prefix out of the ULA Site Prefix that it maintains. Out of the 2^16 possible subnets of the /48, the stub router SHOULD
	  use the numerically highest /64 prefix.
	</t><t>
	  If there are multiple stub routers providing connectivity between the stub network and infrastructure, each stub network
	  uses its own NAT64 prefix—there is no common NAT64 prefix. The reason for this is that NAT64 translation is not stateless,
	  and is tied to the stub router&apos;s IPv4 address. Therefore each NAT64 egress is not equivalent.
	</t><t>
	  A stub network that services a Wi-Fi stub network SHOULD provide DNS64 translation: hosts on the stub network cannot be
	  assumed to be able to do DNS64 synthesis in the stub resolver. In this case the DNS resolver on the stub router MUST honor
	  the CD and DO bits if received in a request, since this indicates that the stub resolver on the requestor intends to do
	  DNSSEC validation. In this case, the resolver on the stub router MUST NOT perform DNS64 synthesis.
	</t><t>
	  On specific stub networks it may be desirable to require the stub network device to perform DNS64 synthesis. Stub network
	  routers for such networks do not need to provide DNS64 synthesis. Instead, they MUST provide an ipv4only.arpa answer that
	  advertises the NAT64 prefix for that stub router, and MUST provide an explicit route to that NAT64 prefix on the stub
	  network using RA or whatever technology is specific to that stub network type.
	</t><t>
	  In constrained networks it can be very useful if stub network resolvers provide the information required to do DNS64
	  translation in the answer to the AAAA query. If the answer to an AAAA query comes back with "no data" (not NXDOMAIN), this
	  suggests that there may be an A record. In this case, the stub network&apos;s resolver SHOULD attempt to look up an A record on
	  the same name. If such a record exists, the resolver SHOULD return no data in the Answer section of the DNS response, and
	  SHOULD provide any CNAME records that were involved in returning the "no data" answer to the AAAA query, and SHOULD
	  provide any A records that were ultimately returned, in the Additional section. The resolver should also include an
	  ipv4only.arpa record in the Additional section.
	</t>
      </section>
    </section>
    
    <section>
      <name>Handling partitioning events on a stub network</name>
      <t>
	Some technologies used for stub networks, for example Thread or 6LoWPAN mesh networks, can produce partitioned networks,
        where what is notionally the same stub network winds up looking like two or more discrete links. For mesh networks, such
        partitions can form and rejoin over time as a result of either changes in radio propagation or the addition of, or removal
        of, devices on the mesh.
      </t><t>
	On stub networks that can partition, one way of detecting that a partition has occurred is to notice that the stub router
	that has advertised the on-link prefix for the stub network is no longer reachable via the stub network. When this occurs,
	stub routers that notice this loss of reachability MUST advertise a ULA Link Prefix derived from their ULA Site Prefix on
	the stub network.
      </t><t>
	An implication of this is that when such a partition forms, the same ULA Link Prefix can’t be advertised on both partitions,
	since this will result in ambiguous routing. We address this problem by requiring that each stub router generate its own ULA
	Site Prefix. This prefix is then available for two purposes: providing addressing on the AIL, if needed, and providing
	addressing on the stub network, if needed.
      </t><t>
	When partitions of this type occur, they may also heal. When a partition heals in a situation where two stub routers have
	both been advertising a prefix, it will now appear that there are two prefixes on the stub network.
      </t><t>
	When the time comes to deprecate one or more prefixes as a result of a network partition healing, only one prefix should
	remain. If there are any GUA prefixes, and if there is no specific configuration contradicting this, the GUA prefix that is
	numerically lowest should be kept, and all others deprecated. If there are no GUA prefixes, then the ULA Link Prefix that is
	numerically lowest should be kept, and the others deprecated. By using this approach, it is not necessary for the routers to
	coordinate in advance.
      </t>
    </section>
    
    <section>
      <name>Services Provided by Stub Routers</name>
      <t>
	In order to provide network access, stub routers must provide some network services to the stub network. We have previously
	discussed the following services:</t>
      <dl>
	<dt>DNS Resolver:</dt><dd>The stub network MUST provide a DNS resolver. If RAs are in use on the stub network, the DNS resolver
	  is advertised in the Router Advertisement Recursive DNS Server option. If RAs are not in use on the stub network, then
	  the mechanism whereby the DNS resolver is advertised by the stub router is specific to that type of stub network.</dd>
	<dt>DHCPv6 Server:</dt><dd>The use of DHCPv6 on the stub network is NOT RECOMMENDED. In some cases it may necessary, but should be
	  disabled by default if the stub router provides this capability at all.</dd>
	<dt>Discovery Proxy:</dt><dd>In order to discover services on the AIL, stub routers MUST act as
	  Discovery Proxies for any AILs to which they are attached.</dd>
	<dt>SRP Registrar:</dt><dd>Stub routers MUST provide SRP registrar service. This service MUST be advertised using DNS-SD in
	  a legacy browsing domain that is discoverable through the stub router's resolver.</dd>
	<dt>Legacy Browsing Domains:</dt><dd>The stub resolver must advertise legacy browsing domains for each AIL,
	  for the zone that is maintained by its SRP service, and in addition must list the legacy browsing domains provided
	  by the infrastructure network, if any.</dd>
	<dt>NAT64:</dt><dd>As mentioned above, stub routers may need to provide NAT64 service so that devices on the stub network
	  can communicate with IPv4 hosts on the infrastructure network and the global internet.</dd>
      </dl>
    </section>
    
    <section>
      <name>IANA Considerations</name>
      <t>
        This document has no IANA actions.
      </t>
    </section>
    
    <section>
      <name>Security Considerations</name>
      <t>
        Because a SNAC router operates as an IPv6 router that sends and receives IPv6 Neighbor Discovery protocol messages,
        the security considerations of Section 11 of <xref target="RFC4861"/> apply. No additional security considerations are
        identified.
      </t>
    </section>
  </middle>

  <back>
    <references>
      <name>Normative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6762.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7084.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8200.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8766.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8781.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-srp.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-advertising-proxy.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.hui-stub-router-ra-flag.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dhc-rfc8415bis.xml" />
    </references>
    <references>
      <name>Informative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2328.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4944.xml" />
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6282.xml" />      
    </references>

    <section anchor="net-analysis">
      <name>Analysis of deployment scenarios in which a stub router could cause problems</name>
      <section>
	<name>Unmanaged home network</name>
	<t>
	  In this scenario, a non-expert home user connects stub router to own unmanaged home network. This is the key intended use case for stub networks.
	  This document describes how to implement a stub router such that it operates correctly in this situation, whether the ISP is providing IPv6
	  reachability to the Internet or not.
	</t>
	<t>
	  In some unmanaged network settings, there is a "guest" network in addition to the main network. In this configuration, if
	  a stub router is added to the guest infrastructure network, no communication will be possible. The general intended
	  behavior of the guest network is to isolate untrusted hosts. Since this would be the intended behavior on the part of the
	  owner of the network, it won't be a surprise to them, since they had to explicitly give the stub router's owner the guest
	  network credentials and not the main network credentials. This should also mean that the owner of the stub router will not
	  expect it to function in this scenario.
	</t>
	<t>
	  An additional feature of some unmanaged networks is that the owner of the network can choose to isolate all devices on the
	  network, so that devices on the network are able to use the Internet, but not communicate with each other. This is essentially
	  the same as being connected to the guest network, except that there is no other network. In this case we would expect that the
	  owner of the network doesn't expect any devices attached to the network to be able to communicate with any other device, so
	  the failure of devices connected to infrastructure to communicate with devices on the stub network would not be a surprise.
	  The owner of the stub router might be surprised in this case, but ultimately the owner of the infrastructure network gets
	  to make this decision, and there isn't anything we can or should do on behalf of the stub router's owner in this case.
	</t>
    </section>
	<section>
	  <name>Use on an unmanaged (non-home) IPv6 network</name>
	  <t>
	    In this scenario we have a site that is not a home, so perhaps a restaurant or business, where there is no network
	    operator per se, and the network is deployed similarly to a home network. There is little difference between this
	    scenario and an unmanaged home network, but expectations may be different. In particular, it is very common in such
	    settings for there to be a guest network for visitors, or for the network to enforce isolation between all nodes
	    connected to it.
	  </t>
      </section>
      <section>
	<name>Use on a managed network</name>
	<t>
	  In this scenario, a non-expert user attaches a stub router to an infrastructure network that's managed. This network has correctly deployed
	  RA Guard and/or port-based access control. As a result, the stub router won't succeed in advertising a prefix on the managed network.
	  Communications originating on the stub network that are able to communicate using NAT64 will still work.
	</t>
	<t>
	  In the managed network case, it's possible that the network operator is willing to permit stub routers to be attached to the network by
	  users. In this case, they might either not deploy RA guard, or they might deploy working DHCPv6 prefix delegation. This could be
	  PD-per-host (where hosts are encouraged to use prefix delegation) or just ordinary prefix delegation (where hosts are given prefix
	  delegation if they ask for it, but not encouraged to ask for it).
	</t>
	<t>
	  In such a situation, if DHCPv6 PD works on the infrastructure link, the stub router will function correctly, because the delegated prefix
	  will be correctly routed.
	</t>
	<t>
	  It's worth noting that IPv4 devices that act similarly to stub routers, using NAT64, already exist and may indeed use the stub network
	  functionality to support internal connections that aren't even apparent to the user. In this case the stub router is not relying on
	  RA to function because it's using its IPv4 address and NAT64 to provide connectivity, so there is no management issue even if RA is
	  blocked. This is a reasonable use case for IPv6, and the current stub network document does in fact enable this use case.
	</t>
	<t>
	  When a stub router is attached to an infrastructure network that has deployed RA guard and does not support DHCPv6 prefix delegation, and
	  where that infrastructure network does allow the use of multicast DNS, services advertised on the stub network will be discoverable on the
	  infrastructure network, but will not be reachable.
	</t>
	<section>
	  <name>Managed networks where DHCPv6 is required but RA guard is not present</name>
	  <t>
	    There can be a case where an infrastructure does not implement RA guard, does not advertise what this document considers
	    to be an "acceptable" prefix, and does provide addressing using DHCPv6 IA_NA. In this situation, it could be the case that
	    two ULA prefixes are being advertised as on-link and one is being advertised as permitting autonomous configuration.
	  </t>
	  <t>
	    In the case a host that is attempting to communicate with a device using a site ULA prefix on a different link may
	    choose a ULA address as a source address.  If it were to choose the autonomously-configured ULA address as its source
	    address, this would fail, because there is no route back to the stub-network-provided ULA prefix.
	  </t>
	  <t>
	    However, this can only happen in practice if the host did not receive an address from DHCPv6.  In this case, the host
	    would not be able to communicate anyway. So the behavior we might see here is that a series of IP packets with an
	    unexpected source address might be sent to a device on another link, and the device would be unable to send a
	    response.
	  </t>
	  <t>
	    In such scenarios we have no way to actually know based on the network configuration what the operator's intention was. An operator
	    that sees a problem with this can react by implementing RA guard or by blocking unknown source addresses at the router, and in so
	    doing they would be expressing their intention. This configuration would not cause any new problem: a host that could communicate would
	    still be able to communicate, and a host that could not communicate would not become able to communicate.
	  </t>
	  <t>
	    The one scenario where we could actually see a communication problem is when there is a GUA prefix advertised by
	    infrastructure but no ULA prefix, but there is a ULA destination to reach. In this case, the longest-matching-prefix
	    algorithm could choose the stub-router-provided ULA prefix as a source address to reach the site-provided ULA
	    destination, and in this case communication would fail. Only happy eyeballs can correct this situation.
	  </t>
	</section>
      <section>
	<name>Use on a managed network without IPv6</name>
	<t>
	  In this scenario, there is no IPv6 service being intentionally advertised on a managed network. Operators of such netowrks
	  may not be aware of the possibility of configuring RA guard.  In this situation, a stub router will connect and advertise
	  services, which will be reachable just as they would be in a similar unmanaged network. A stub router that conforms to
	  this specification will not advertise an IPv6 default route. Therefore it should not cause operational problems, just as
	  connecting an IPv4 NAT gateway in the same scenario would not cause operational problems.
	</t>
      </section>
      </section>
    </section>

    <section>
      <name>Router Advertisements on the Infrastructure Network</name>
      <t>
        An active SNAC router sends periodic multicast Router Advertisements as well as unicast Router Advertisements
        on the infrastructure network.  These Router Advertisements are filled with the following values consistent with the message format
        given in Section 4.2 of <xref target="RFC4861"/>:
      </t>
	<ul>
          <li> Router Lifetime: A SNAC router never advertises itself as a default router on infrastructure. Therefore, the router lifetime is always zero
	    in SNAC router advertisements on infrastructure.</li>
          <li> In the 'M' flag bit and 'O' flag bits, section <xref target="state-begin-advertising"/> specifies that they must be zero.</li>
	  <li> The 'SNAC router' flag bit xref target="I-D.ietf-6man-snac-router-bit" TBD WaitRef MUST be 1.</li>
          <li> In the Cur Hop Limit field: 0</li>
          <li> In the Reachable Time field: 0</li>
          <li> In the Retrans Timer field: 0</li>
          <li>
	    In the options, with the exception of the options listed below, stub routers MUST NOT send any RA options, since
            these other options are for managing the network, and the stub network is not responsible for managing the infrastructure
            network.</li>
            <li><ul>
              <li>
		Source Link-Layer Address option: Including this option whenever possible is RECOMMENDED. The load balancing use case
		in <xref target="RFC4861" section="6.2.3" sectionFormat="of"/> is out of scope for this document and is not generally
		expected to be applicable. The benefit of including this option is that it eliminates the need to do neighbor discovery
		on the SNAC router's link-local address in order to get its link-layer address.</li>
              <li>
		MTU option: the stub router is not managing the link, and hence SHOULD NOT send this option.</li>
              <li> Prefix Information options: when there is no suitable prefix (See <xref target="suitable"/>) on the
		infrastructure link, some SNAC router will need to send a PIO. However, unless they are able to cooperate in
		choosing a PIO, only one SNAC routers will send it PIO. How this decision is made is described in
		<xref target="suitable-prefix-state-machine"/>. When a stub router sents this option, the following settings
		apply:</li>
              <li><ul>
                <li> In the 'L' flag bit (on-link): 1.</li>
                <li> In the 'A' flag bit (Autonomous address configuration): 1</li>
                <li> In the Valid Lifetime field: normally STUB_PROVIDED_PREFIX_LIFETIME (see <xref target="constants"/>), but see
		  <xref target="state-deprecating"/>.</li>
                <li> In the Preferred Lifetime field: normally STUB_PROVIDED_PREFIX_LIFETIME (see <xref target="constants"/>), but see
		  <xref target="state-deprecating"/>.</li>
	      </ul></li>
	      <li> Route Information Option: an active SNAC router always provides a Route Information Option for each prefix that
		is valid on the stub network. This provides a route from the infrastructure network to the stub network. The
		following settings apply:</li>
	      <li><ul>
		<li> Prefix Length: 64</li>
		<li> Route Preference: low</li>
		<li> Route Lifetime: STUB_NETWORK_REACHABLE_TIME (TBD: what about deprecated prefixes? Add reference to new proposed text that addresses issue #67 on github)</li>
		<li> Prefix: the prefix advertised on the stub network</li>
	      </ul></li>
	    </ul></li>
	</ul>
      <t>
	It is expected that all RA options for a SNAC router will fit in a single RA. Therefore, we do not expect SNAC routers to send multiple
	RAs with different information other than to announce that some information previously advertised has changed.</t>
    </section>
    
    <section>
      <name>Router Advertisments on the stub network</name>
      <t>
        A stub router sends periodic as well as solicited Router Advertisements
        out its advertising interfaces on the stub network.  Outgoing Router Advertisements are
        filled with the following values consistent with the message format
        given in Section 4.2 of <xref target="RFC4861"/>:
      </t>
	<ul>
          <li> Router Lifetime: The SNAC router can be a default router on the SNAC network (see xref target="snac-reachability" TBD fixref).</li>
          <li> SNAC routers do not provide DHCP service on the stub network. Therefore, the 'M' flag bit and 'O' flag bits MUST be zero.</li>
	  <li> The 'SNAC router' flag bit xref target="I-D.ietf-6man-snac-router-bit" TBD waitRef MUST be 0.</li>
          <li> In the Cur Hop Limit field: 0</li>
          <li> In the Reachable Time field: 0</li>
          <li> In the Retrans Timer field: 0</li>
          <li>
	      In the options, the stub router may send options as appropriate.</li>
            <li><ul>
              <li>
		Source Link-Layer Address option: Including this option whenever possible is RECOMMENDED. The load balancing use case
		in <xref target="RFC4861" section="6.2.3" sectionFormat="of"/> is out of scope for this document and is not generally
		expected to be applicable. The benefit of including this option is that it eliminates the need to do neighbor discovery
		on the SNAC router's link-local address in order to get its link-layer address.</li>
              <li>
		MTU option: the stub router is managing the link, and hence MAY send this option.</li>
              <li> Some SNAC router will need to send a PIO. Normally, only one SNAC router will send a PIO. How this decision is made is described in
		<xref target="stub-addressability"/>. When a stub router sents this option, the following settings
		apply:</li>
              <li><ul>
                <li> In the 'L' flag bit (on-link): 1.</li>
                <li> In the 'A' flag bit (Autonomous address configuration): 1</li>
                <li> In the Valid Lifetime field: normally STUB_PROVIDED_PREFIX_LIFETIME (see <xref target="constants"/>), but see
		  <xref target="state-deprecating"/>.</li>
                <li> In the Preferred Lifetime field: normally STUB_PROVIDED_PREFIX_LIFETIME (see <xref target="constants"/>), but see
		  <xref target="state-deprecating"/>.</li>
	      </ul></li>
	      <li> <t>Route Information Option: when a SNAC router is not advertising a default route, it MUST include one or more
		RIO options in router advertisements on the stub network to provide reachability to infrastructure. This is discussed in
		<xref target="stub-reachability"/>. The following settings apply:</t>
	      <ul>
		<li> Prefix Length: the length of the prefix covered by the route, not necessarily 64.</li>
		<li> Route Preference: low</li>
		<li> Route Lifetime: The lifetime of the prefix on the infrastructure link, but no more than STUB_NETWORK_REACHABLE_TIME</li>
		<li> Prefix: the prefix that is known to be reachable on the infrastructure network</li>
	      </ul></li>
	    </ul></li>
	</ul>
	</section>
  </back>
</rfc>

  <!-- Keep this comment at the end of the file
       Local variables:
       mode: sgml
       fill-column:132
       sgml-omittag:t
       sgml-shorttag:t
       sgml-namecase-general:t
       sgml-general-insert-case:lower
       sgml-minimize-attributes:nil
       sgml-always-quote-attributes:t
       sgml-indent-step:2
       sgml-indent-data:t
       sgml-parent-document:nil
       sgml-exposed-tags:nil
       sgml-local-catalogs:nil
       sgml-local-ecat-files:nil
       End:
    -->
